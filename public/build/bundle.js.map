{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/firebase.js","../../src/utility/Badge.svelte","../../src/utility/Image.svelte","../../src/utility/Input.svelte","../../src/utility/Button.svelte","../../src/constants.js","../../src/EventManager.js","../../src/Forms/LoginForm.svelte","../../src/Pages/LoginPage.svelte","../../src/utility/api.js","../../src/utility/Action.svelte","../../src/NoteItem.svelte","../../src/Sidebar.svelte","../../src/NoteArea.svelte","../../src/utility/Line.svelte","../../src/utility/ActionPanel.svelte","../../src/utility/Popup.svelte","../../src/Pages/AppPage.svelte","../../src/utility.js","../../src/utility/LoadSpinner.svelte","../../src/utility/ProcessSpinner.svelte","../../src/utility/Toast.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","const firebaseConfig = {\r\n    apiKey: \"AIzaSyCLFYV8XdBeK93FUvPfy_DtJUppBW-rfeo\",\r\n    authDomain: \"collaborative-notes-40556.firebaseapp.com\",\r\n    projectId: \"collaborative-notes-40556\",\r\n    storageBucket: \"collaborative-notes-40556.appspot.com\",\r\n    messagingSenderId: \"839274914110\",\r\n    appId: \"1:839274914110:web:d831824d64d0aba8cc8c6f\"\r\n  };\r\n  \r\n  Object.freeze(firebaseConfig);\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  export const signinUser = (email,password) => {\r\n    return firebase.auth().signInWithEmailAndPassword(email, password);\r\n  };\r\n  \r\n  export const signoutUser = () => {\r\n    firebase.auth().signOut();\r\n  };\r\n\r\n  export const AUTH = firebase.auth();\r\n  ","<script>\r\n    export let label;\r\n</script>\r\n\r\n<div class=\"badge flex justify-space-between align-center bg-white max-width p-t-5 p-b-5 p-l-20 p-r-20 border-radius-25 badge-shadow\">{label}</div>\r\n\r\n<style>\r\n    \r\n</style>","<script>\r\n    export let type;\r\n    export let alt;\r\n    export let src;\r\n    export let classes;\r\n</script>\r\n\r\n<img class={classes} data-type={type} src={src} alt={alt}/>\r\n\r\n<style>\r\n    img[data-type=\"logo\"]{\r\n        height: 26px;\r\n\t    width: 32px;\r\n    }\r\n</style>","<script>\r\n\r\n    export let hasLabel = false;\r\n    export let type;\r\n    export let name;\r\n    export let label;\r\n    export let placeholder;\r\n    export let onChange;\r\n    export let onKeyUp;\r\n    export let classes = \"\";\r\n\r\n</script>\r\n\r\n{#if hasLabel}\r\n    <label class=\"text-bold block\" for={name}>{label}</label>    \r\n{/if}\r\n\r\n{#if type === 'email'}\r\n    <input class=\"border-radius-5 border-color-secondary m-t-5 m-b-5 p-l-16 p-r-16 p-t-10 p-b-10 bg-white border-solid-1 {classes}\" type=\"email\" name={name} on:change={onChange} />\r\n    {:else if type === 'password'}\r\n    <input class=\"border-radius-5 border-color-secondary m-t-5 m-b-5 p-l-16 p-r-16 p-t-10 p-b-10 bg-white border-solid-1 {classes}\" type=\"password\" name={name} on:change={onChange} />\r\n    {:else if type === 'text'}\r\n    <input class=\"border-radius-5 border-color-secondary m-t-5 m-b-5 p-l-16 p-r-16 p-t-10 p-b-10 bg-white border-solid-1 {classes}\" type=\"text\" {name} {placeholder} on:keyup={onKeyUp} />\r\n{/if}\r\n\r\n\r\n<style>\r\n    input{\r\n        outline: none;\r\n    }\r\n</style>","<script>\r\n\r\n    export let label;\r\n    export let onClick;\r\n    export let type;\r\n    export let classes;\r\n\r\n</script>\r\n\r\n\r\n<button data-type={type} class=\"border-radius-5 p-t-10 p-b-10 p-l-10 p-r-10 m-r-025-em border-solid-1 {classes}\" on:click={onClick}>{label}</button>\r\n\r\n<style>\r\n    button{\r\n        background: none;\r\n        border: none;\r\n        outline: none;\r\n        cursor: pointer;\r\n        font-family: normal;\r\n    }\r\n\r\n    button[data-type=\"primary\"]{\r\n        background: var(--theme-color);\r\n        color: var(--primary-color);\r\n    }\r\n\r\n    button[data-type=\"secondary\"]{\r\n        color: var(--theme-color);\r\n        background: var(--primary-color);\r\n    }\r\n\r\n    button[data-type=\"tertiary\"]{\r\n        color: var(--primary-color);\r\n        border: 1px solid var(--primary-color);\r\n    }\r\n    \r\n</style>","export const Toast_Timeout = 2000;\r\nexport const check_list_trigger_characters = '##';\r\nexport const bullet_list_trigger_characters = '$$';\r\nexport const noteIdToContent = {};\r\nexport const checkbox_unchecked_code = '⬜';\r\nexport const checkbox_checked_code = '✅';\r\nexport const list_disc = '◼️';\r\nexport const checkbox_unchecked_code_sanitized = '[##]';\r\nexport const checkbox_checked_code_sanitized = '[**]';\r\nexport const list_disc_sanitized = '[..]';\r\n\r\nexport const APP_NAME = 'Quick Notes';\r\nexport const email_regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nconst API = {\r\n    BASE_ENDPOINT : 'https://collab-notes-one-developer-edition.ap27.force.com/services/apexrest/api/',\r\n    ENDPOINTS : {\r\n        'getAllNotes': 'getAllNotes',\r\n        'createNote': 'createNewNote',\r\n        'deleteNote' : 'deleteNote',\r\n        'updateNoteTitle' : 'updateNoteTitle',\r\n        'updateNoteContent' : 'updateNoteContent',\r\n        'requestAccess' : 'requestAccess'\r\n    }\r\n};\r\n\r\nconst MESSAGE = {\r\n    LOGIN_SUCESS : 'login sucessfully!',\r\n    GENERIC_ERROR_MSG : 'something went wrong!',\r\n    NOTE_SAVE_SUCCESS : 'Note saved successfully',\r\n    TEXT_COPY_SUCCESS : 'text copied!',\r\n    NOTE_DELETE_SUCEESS : 'Note deleted successfully.',\r\n    ENTER_EMAIL : 'Please enter your email',\r\n    ENTER_PASSWORD : 'Please enter your Password',\r\n    INVALID_CREDS : 'Invalid Email or Password.',\r\n    REQUEST_SUCCESS : 'Your request is successfully submitted.'\r\n};\r\n\r\nconst helpItems = [\r\n    {\r\n        \"key\" : \"Alt + s\",\r\n        \"task\" : \" to save your note.\"        \r\n    },\r\n    {\r\n        \"key\" : \"Alt + n\",\r\n        \"task\" : \" to create new note.\"        \r\n    },\r\n    {\r\n        \"key\" : \"Alt + f\",\r\n        \"task\" : \" to search your notes.\"        \r\n    }\r\n];\r\n\r\nObject.freeze(API);\r\nObject.freeze(MESSAGE);\r\nObject.freeze(helpItems);\r\n\r\nexport {\r\n    API,\r\n    MESSAGE,\r\n    helpItems\r\n};","const events = {};\r\n\r\nconst EVENTS = {\r\n    SELECT_NOTE : 'SELECT_NOTE',\r\n    DELETE_NOTE : 'DELETE_NOTE',\r\n    NOTE_NAME_CHANGE : 'NOTE_NAME_CHANGE',\r\n    OPEN_POPUP : 'OPEN_POPUP',\r\n    NOTE_AREA_STATUS_CHANGE : 'NOTE_AREA_STATUS',\r\n    NOTE_AREA_KEY_UP : 'NOTE_AREA_KEY_UP',\r\n    NOTE_AREA_KEY_DOWN : 'NOTE_AREA_KEY_DOWN',\r\n    NEW_NOTE : 'NEW_NOTE',\r\n    SAVE_NOTE : 'SAVE_NOTE',\r\n    USER_SIGNOUT : 'USER_SIGNOUT',\r\n    USER_LOGIN : 'USER_LOGIN',\r\n    CLOSE_POPUP : 'CLOSE_POPUP',\r\n    SEARCH_NOTE : 'SEARCH_NOTE',\r\n    SHOW_SPINNER : 'SHOW_SPINNER',\r\n    HIDE_SPINNER : 'HIDE_SPINNER',\r\n    SHOW_TOAST : 'SHOW_TOAST',\r\n    HIDE_TOAST : 'HIDE_TOAST',\r\n    USER_ACCESS_APP : 'USER_ACCESS_APP',\r\n    DOWNLOAD_NOTE : 'DOWNLOAD_NOTE'\r\n}\r\n\r\nObject.freeze(EVENTS);\r\n\r\nconst registerListener = (eventName, callback) => {  \r\n    if (!events[eventName]) {\r\n        events[eventName] = [];\r\n    }\r\n    const duplicate = events[eventName].find((listener) => {\r\n        return listener.callback === callback;\r\n    });\r\n    if (!duplicate) {\r\n        events[eventName].push({ callback});\r\n    }\r\n};\r\n \r\nconst fireEvent = (eventName, payload) => {\r\n    if (events[eventName]) {\r\n        const listeners = events[eventName];\r\n        listeners.forEach((listener) => {       \r\n        try {\r\n            listener.callback.call(this,payload);\r\n        } catch (error) {\r\n            (window.quick_notes.config.debug_mode) && (\r\n                console.error('@eventName : ',eventName) &&\r\n                console.error('@listener : ',listener) &&\r\n                console.error('@payload : ',payload) &&\r\n                console.error('@error : ',error)\r\n            );\r\n        }\r\n        });\r\n    }\r\n};\r\n\r\nexport {\r\n    registerListener,\r\n    fireEvent,\r\n    EVENTS\r\n};\r\n ","<style>\r\n    .form{\r\n        background-image: url(/login-bg.png);\r\n    }\r\n    .login-form{\r\n        width: 400px;\r\n        height: 400px;\r\n        box-shadow: rgb(0 0 0 / 20%) 0px 0.5px 3px -1px, rgb(0 0 0 / 15%) 0px 5px 30px -10px;\r\n    }\r\n    \r\n</style>\r\n\r\n<script>\r\n    import Image from \"../utility/Image.svelte\";\r\n    import Input from \"../utility/Input.svelte\";\r\n    import Button from \"../utility/Button.svelte\";\r\n    import { APP_NAME , email_regex} from \"../constants\";\r\n    import {fireEvent,EVENTS} from \"../EventManager\";\r\n\r\n    let user_detail = {\r\n        email:\"\",\r\n        password:\"\"\r\n    }\r\n    const signIn = () => {\r\n        if(user_detail.email && user_detail.password){\r\n            fireEvent(EVENTS.SHOW_SPINNER,{});\r\n            fireEvent(EVENTS.USER_LOGIN,user_detail);\r\n        }else{\r\n            (window.quick_notes.config.debug_mode) &&\r\n            console.error('Please provide Email and Password');\r\n        }\r\n    }\r\n\r\n    const requestAccess = () => {\r\n        const newUserEmail = prompt(\"Please enter your email\");\r\n        \r\n        if(newUserEmail){\r\n            if(email_regex.test(String(newUserEmail).toLowerCase())){\r\n                fireEvent(EVENTS.SHOW_SPINNER,{});\r\n                fireEvent(EVENTS.USER_ACCESS_APP,{\r\n                    email : newUserEmail\r\n                });\r\n            }else{\r\n                alert('invalid email address');\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        user_detail[e.target.name] = e.target.value;\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"flex justify-center align-center grow form\">\r\n    <div class=\"login-form border-radius-5 flex justify-center align-center flex-column bg-white p-t-10 p-b-10\">\r\n        <div class=\"flex align-center\">\r\n            <Image classes=\"m-l-4 m-r-4\" src=\"logo.svg\" alt=\"logo\" type=\"logo\"/>\r\n            <span class=\"text-medium text-boldest text-primary\">{APP_NAME}</span>\r\n        </div>\r\n        <div class=\"flex justify-center flex-column align-center m-t-30 w-90-p\">\r\n            <div class=\"flex flex-column w-90-p p-t-10 p-b-10 p-l-16 p-r-16\">\r\n                <Input name=\"email\" type=\"email\" label=\"Email\" hasLabel onChange={handleChange}/>\r\n            </div>\r\n            <div class=\"flex flex-column w-90-p p-t-10 p-b-10 p-l-16 p-r-16\">\r\n                <Input name=\"password\" type=\"password\" label=\"Password\" hasLabel onChange={handleChange}/>\r\n            </div>\r\n            <div class=\"flex flex-column w-90-p p-t-10 p-b-10 p-l-16 p-r-16\">\r\n                <Button classes=\"text-bold\" onClick={signIn} label=\"Login\" type=\"primary\"/>\r\n            </div>\r\n            <br />\r\n            <span class=\"text-primary text-bold\">Don't have an Account?</span>\r\n            <div class=\"flex flex-column w-90-p p-t-10 p-b-10 p-l-16 p-r-16\">\r\n                <Button classes=\"text-bold\" onClick={requestAccess} label=\"Request Access\" type=\"tertiary\"/>\r\n            </div>\r\n            \r\n        </div>\r\n\r\n    </div>\r\n</div>\r\n","<script>\r\n    import Badge from \"../utility/Badge.svelte\";\r\n    import LoginForm from \"../Forms/LoginForm.svelte\";\r\n    import { signinUser } from \"../firebase\";\r\n    import {fireEvent,EVENTS,registerListener} from \"../EventManager\";\r\n    import { onMount } from \"svelte\";\r\n    import {requestAccess} from '../utility/api';\r\n    import { MESSAGE } from '../constants';\r\n\r\n    const onSignIn = (user_detail) => {\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        const email = user_detail.email;\r\n        const password = user_detail.password;\r\n        signinUser(email,password)\r\n        .then (res => {\r\n            // createLog('Log in','','LOG','Log in successfully',LOG_GROUP);\r\n        })\r\n        .catch(err => {\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            //createLog('Sign in','19','ERROR',err,ERROR_GROUP);\r\n            fireEvent(EVENTS.SHOW_TOAST,{\r\n                message : MESSAGE.INVALID_CREDS\r\n            });\r\n        });\r\n    }\r\n\r\n    const onRequestAccess = (user_detail) => {\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        requestAccess(user_detail.email)\r\n            .then(res => {\r\n                if(res && res.success){\r\n                    fireEvent(EVENTS.SHOW_TOAST,{\r\n                        message : MESSAGE.REQUEST_SUCCESS\r\n                    });\r\n                }else{\r\n                    fireEvent(EVENTS.SHOW_TOAST,{\r\n                        message : MESSAGE.GENERIC_ERROR_MSG\r\n                    });\r\n                }\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            })\r\n            .catch(err => {\r\n                fireEvent(EVENTS.SHOW_TOAST,{\r\n                    message : MESSAGE.GENERIC_ERROR_MSG\r\n                });\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            });\r\n    }\r\n\r\n    onMount(() => {\r\n        registerListener(EVENTS.USER_LOGIN,onSignIn);\r\n        registerListener(EVENTS.USER_ACCESS_APP,onRequestAccess);\r\n    })\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n\r\n<div class=\"flex flex-column height-full\">\r\n    \r\n    <LoginForm on:sign_in={onSignIn}/>\r\n    \r\n    <div class=\"fixed right-10 top-10\">\r\n        <Badge label=\"Suban Khoja\" />\r\n    </div>\r\n</div>","import { API } from \"../constants\";\r\n\r\nexport const getAllNotes = (userId) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.getAllNotes,{\r\n        method : 'POST',\r\n        headers : {\r\n            'X-User-Id' : userId\r\n        },\r\n        body : window.btoa(JSON.stringify({}))\r\n    })\r\n    .then(res => res.json())\r\n    .catch(err => {\r\n        (window.quick_notes.config.debug_mode) && console.error('getAllNotes : ',err);\r\n    });\r\n};\r\n\r\nexport const createNewNote = (name,userId) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.createNote,{\r\n        method : 'POST',\r\n        headers : {\r\n            'X-User-Id' : userId\r\n        },\r\n        body : window.btoa(JSON.stringify({\r\n            name\r\n        }))\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        (window.quick_notes.config.debug_mode) && console.error('createNewNote : ',err);\r\n    });\r\n};\r\n\r\nexport const deleteNoteById = (id,userId) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.deleteNote,{\r\n        method : 'POST',\r\n        headers : {\r\n            'X-User-Id' : userId\r\n        },\r\n        body : window.btoa(JSON.stringify({\r\n            id\r\n        }))\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        (window.quick_notes.config.debug_mode) && console.error('deleteNoteById : ',err);\r\n    });\r\n};\r\n\r\nexport const updateNoteContent = (id,content,userId) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateNoteContent,{\r\n        method : 'POST',\r\n        headers : {\r\n            'X-User-Id' : userId\r\n        },\r\n        body : window.btoa(JSON.stringify({\r\n            id,\r\n            content\r\n        }))\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        (window.quick_notes.config.debug_mode) && console.error('updateNoteContent : ',err);\r\n    });\r\n};\r\n\r\nexport const updateNoteTitle = (id,name,userId) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.updateNoteTitle,{\r\n        method : 'POST',\r\n        headers : {\r\n            'X-User-Id' : userId\r\n        },\r\n        body : window.btoa(JSON.stringify({\r\n            id,\r\n            name\r\n        }))\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        (window.quick_notes.config.debug_mode) && console.error('updateNoteTitle : ',err);\r\n    });\r\n};\r\n\r\nexport const requestAccess = (email) => {\r\n    return fetch(API.BASE_ENDPOINT+API.ENDPOINTS.requestAccess,{\r\n        method : 'POST',\r\n        body : window.btoa(JSON.stringify({\r\n            email\r\n        }))\r\n    }).then(res => res.json())\r\n    .catch(err => {\r\n        (window.quick_notes.config.debug_mode) && console.error('createNewNote : ',err);\r\n    });\r\n};","<script>\r\n    export let title;\r\n    export let OnClick;\r\n</script>\r\n\r\n\r\n<span title={title} class=\"p-l-10 p-r-10 pointer\" on:click={OnClick}>\r\n    <svg viewBox=\"0 0 24 24\" class=\"w-20-px h-20-px p-t-4 p-b-4 p-l-4 p-r-4 border-radius-5 bg-primary\">\r\n        <slot/>\r\n    </svg>\r\n</span>\r\n","<script>\r\n    import Icon from \"./utility/Icon.svelte\";\r\n    import Action from \"./utility/Action.svelte\";\r\n    import {fireEvent,EVENTS} from \"./EventManager\";\r\n    export let note_name;\r\n    export let note_id;\r\n    export let active = false;\r\n    export let showDelete = false;\r\n    export let type;\r\n    \r\n    const onSelect = () => {\r\n        fireEvent(EVENTS.SELECT_NOTE,{\r\n            type,\r\n            note_id : note_id,\r\n            note_name : note_name\r\n        });\r\n    }\r\n\r\n    const onDelete = () => {\r\n        fireEvent(EVENTS.DELETE_NOTE,{id : note_id});\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<li id={note_id} class=\"note-item p-t-8 p-b-8 p-r-10 p-l-10 no-border text-primary pointer flex align-center height-24 justify-space-between border-radius-5 {active ? 'active' : ''}\" >\r\n    <span class=\"width-90 max-w-90 pointer text-x-medium\" on:click={onSelect}>{note_name}</span>\r\n    {#if showDelete}\r\n        <!-- <Icon name=\"delete\" OnClick={onDelete}/> -->\r\n        <Action title=\"Help & Shortcuts\" OnClick={onDelete}>\r\n            <path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M18 7a1 1 0 0 1 1 1v11a3 3 0 0 1-3 3H8a3 3 0 0 1-3-3V8a1 1 0 1 1 2 0v11a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V8a1 1 0 0 1 1-1zm-8 2a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 1 1-1zm4 0a1 1 0 0 1 1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 1 1-1zm1-7a1 1 0 0 1 1 1v1h4a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2h4V3a1 1 0 0 1 1-1h6z\"></path>\r\n        </Action>\r\n    {/if}\r\n</li>\r\n","<script>\r\n    import Image from \"./utility/Image.svelte\";\r\n    import NoteItem from \"./NoteItem.svelte\";\r\n    import { AUTH } from \"./firebase\";\r\n    import { APP_NAME } from \"./constants\";\r\n    export let notes = [];\r\n    export let selectedNote;\r\n    \r\n</script>\r\n\r\n<div class=\"sidebar height-full absolute bg-secondary border-box\">\r\n    <header class='header text-primary text-bold border-box flex align-center p-t-10 p-b-5 p-l-8'>\r\n        <Image classes=\"m-l-4 m-r-4\" src=\"logo.svg\" alt=\"logo\" type=\"logo\"/>\r\n        <span class=\"text-medium text-boldest text-primary\">{APP_NAME}</span>\r\n    </header>\r\n    <ul class=\"p-l-10 p-r-10 min-h-85 height-85\">\r\n        {#each notes as note}\r\n            <NoteItem note_name={note.title} note_id={note.id} active={note.id === selectedNote.id} type=\"SIDEBAR\" showDelete/>    \r\n        {/each}\r\n    </ul>\r\n\r\n    <footer class=\"flex justify-center align-center flex-column width-100 absolute bottom-5\">\r\n        <span class=\"bg-primary text-bold text-underline\">{AUTH.currentUser.email}</span>\r\n    </footer>\r\n</div>\r\n\r\n<style>\r\n    .sidebar{\r\n        width: 350px;\r\n    }\r\n\r\n    \r\n</style>","<script>\r\n    import {fireEvent,EVENTS} from \"./EventManager\";\r\n\r\n    export let show;\r\n    export let noteName=\"\";\r\n    export let content;\r\n    export let isContentChanged = false;\r\n\r\n    const fireNoteChangeNameEvent = () => {\r\n        fireEvent(EVENTS.NOTE_NAME_CHANGE,{});\r\n    }\r\n\r\n    const sendNoteAreaStatus = (evt) => {\r\n        fireEvent(EVENTS.NOTE_AREA_STATUS_CHANGE,{status : evt.type});\r\n    }\r\n\r\n    const fireNoteAreaKeyUpEvent = (evt) => {\r\n        fireEvent(EVENTS.NOTE_AREA_KEY_UP,{noteArea : evt.target});\r\n    }\r\n\r\n    const fireNoteAreaKeyDownEvent = (evt) => {\r\n        fireEvent(EVENTS.NOTE_AREA_KEY_DOWN,evt);\r\n    }\r\n\r\n</script>\r\n\r\n\r\n{#if show}\r\n    <div class=\"note-container absolute bg-white height-full border-box z-index--1 m-l-400\">\r\n        <header class=\"text-primary text-bold flex p-t-8 p-b-8 p-l-8 p-r-8 border-box flex-space-between align-center\">\r\n            <span class=\"note-name w-90 max-w-90 pointer text-large {isContentChanged ? 'unsaved' : ''}\" on:click={fireNoteChangeNameEvent}>{noteName}</span>\r\n        </header>\r\n        <textarea class=\"m-t-1-em border-box no-border text-x-medium m-l-50 no-resize no-outline height-85\" on:keydown={fireNoteAreaKeyDownEvent} on:keyup={fireNoteAreaKeyUpEvent} bind:value={content} on:focus={sendNoteAreaStatus} on:blur={sendNoteAreaStatus}></textarea>\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .note-container {\r\n        width: calc(100% - 400px);\r\n    }\r\n\r\n    textarea {\r\n        width: calc(100% - 50px);\r\n    }\r\n\r\n    span.note-name.unsaved::after {\r\n        content: \"*\";\r\n        font-weight: bolder;\r\n        color: indianred;\r\n    }\r\n</style>\r\n","<div class=\"w-2-px h-25-px bg-tertiary\"></div>","<script>\r\n    import { fireEvent,EVENTS } from \"../EventManager\";\r\n\r\n    import Action from \"./Action.svelte\";\r\n    import Line from \"./Line.svelte\";\r\n    \r\n    export let selectedNote = {};\r\n\r\n\r\n    const onNewNote = () => {\r\n        fireEvent(EVENTS.NEW_NOTE,{});\r\n    }\r\n    \r\n    const onHelpNeed = () => {\r\n        fireEvent(EVENTS.OPEN_POPUP,{\r\n            popupName : 'helpPopup'\r\n        });\r\n    }\r\n\r\n    const onSignout = () => {\r\n        fireEvent(EVENTS.USER_SIGNOUT,{});\r\n    }\r\n\r\n    const onSearch = () => {\r\n        fireEvent(EVENTS.OPEN_POPUP,{\r\n            popupName : 'searchPopup'\r\n        });\r\n    }\r\n\r\n    const onDownload = () => {\r\n        fireEvent(EVENTS.DOWNLOAD_NOTE,{});\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"flex justify-space-between align-center max-width fixed top-10 right-10 bg-white border-radius-25 p-t-5 p-b-5 p-l-20 p-r-20 badge-shadow\">\r\n    <Action title=\"New Note\" OnClick={onNewNote}> \r\n        <path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M13 4v6a1 1 0 0 0 1 1h6a1 1 0 0 1 0 2h-6a1 1 0 0 0-1 1v6a1 1 0 0 1-2 0v-6a1 1 0 0 0-1-1H4a1 1 0 0 1 0-2h6a1 1 0 0 0 1-1V4a1 1 0 0 1 2 0z\"></path>\r\n    </Action>\r\n    <Line />\r\n    <Action title=\"Search\" OnClick={onSearch}>\r\n        <path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M10 2a8 8 0 0 1 6.568 12.568l4.871 4.871a1.5 1.5 0 1 1-2.121 2.122l-4.894-4.895A8 8 0 1 1 10 2zm0 14a6 6 0 1 0 0-12 6 6 0 0 0 0 12z\"></path>\r\n    </Action>\r\n    <Line />\r\n    <Action title=\"Signout\" OnClick={onSignout}>\r\n        <path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M20.84 3.657a7 7 0 0 1-7.107 11.61l-3.38 3.38a1.38 1.38 0 0 1-.848.353h-2.01c-.28 0-.65.155-.843.347l-1.804 1.805c-.184.184-.573.348-.85.348l-2-.001 7.882-7.882a.5.5 0 0 0 .058-.637l-.058-.07a.5.5 0 0 0-.707 0l-8.166 8.165L1 20.994v-1.488c0-.275.16-.658.356-.844l7.983-7.585a7.001 7.001 0 0 1 11.501-7.42zm-1.414 1.415a5 5 0 1 0-7.07 7.07 5 5 0 0 0 7.07-7.07zm-.707.707a1.5 1.5 0 1 1-2.121 2.12 1.5 1.5 0 0 1 2.121-2.12z\"></path>\r\n    </Action>\r\n    <Line />\r\n    <Action title=\"Help & Shortcuts\" OnClick={onHelpNeed}>\r\n        <path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M12 1c6.075 0 11 4.925 11 11s-4.925 11-11 11S1 18.075 1 12 5.925 1 12 1zm0 2a9 9 0 1 0 0 18 9 9 0 0 0 0-18zm-.14 13.56c.75 0 1.345.575 1.345 1.308 0 .733-.594 1.318-1.346 1.318-.751 0-1.354-.585-1.354-1.318 0-.733.603-1.308 1.354-1.308zm.333-11.059c2.515 0 4.24 1.43 4.24 3.526 0 1.42-.705 2.393-1.967 3.145-1.215.705-1.512 1.15-1.586 1.995-.093.612-.408.992-1.04.992-.704 0-1.094-.5-1.094-1.178v-.176c0-1.15.575-1.911 1.735-2.598 1.15-.696 1.54-1.206 1.54-2.097 0-1.01-.789-1.716-1.93-1.716-1.03 0-1.716.51-2.013 1.447-.204.576-.547.807-1.057.807-.64 0-1.021-.39-1.021-1.01 0-.4.083-.743.26-1.096.575-1.261 2.022-2.04 3.933-2.04z\"></path>\r\n    </Action>\r\n\r\n    {#if selectedNote.id}\r\n        <Line />\r\n        <Action title=\"Download\" OnClick={onDownload}>\r\n            <path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M21 8a1 1 0 0 1 1 1v10a3 3 0 0 1-3 3H5a3 3 0 0 1-3-3V9a1 1 0 1 1 2 0v10a1 1 0 0 0 1 1h14a1 1 0 0 0 1-1V9a1 1 0 0 1 1-1zm-5.5 2a1.5 1.5 0 0 1 0 3h-7a1.5 1.5 0 0 1 0-3h7zM23 4a1 1 0 0 1 1 1v1a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1V5a1 1 0 0 1 1-1h22z\"></path>\r\n        </Action>\r\n    {/if}\r\n    \r\n</div>","<script>\r\n    import Button from \"../utility/Button.svelte\";\r\n    import { fireEvent,EVENTS } from \"../EventManager\";\r\n    \r\n    export let header;\r\n    export let closeLabel = \"Close\";\r\n    \r\n    const fireClosePopupEvent = () => {\r\n        fireEvent(EVENTS.CLOSE_POPUP,{});\r\n    }\r\n\r\n</script>\r\n\r\n<div class=\"modal-container fixed\">\r\n    <div class=\"modal max-height text-primary absolute border-secondary bg-white border-radius-5 no-outline p-l-20 p-r-20 height-auto w-500-px max-h-85\">\r\n        <div class=\"modal-content relative p-t-32 p-r-32 p-b-32 p-l-32 height-100 bg-white text-primary\">\r\n            <div class=\"modal-header text-medium text-bold m-b-16\">{header}</div>\r\n            <slot />\r\n            <div class=\"flex justify-center\">\r\n                <Button classes=\"text-bold\" onClick={fireClosePopupEvent} label={closeLabel} type=\"primary\"/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<style>\r\n    .modal-container{\r\n        inset: 0px;\r\n        background: rgba(41,47,76,0.7);\r\n    }\r\n\r\n    .modal{\r\n        inset: 10% auto 10% 50%;\r\n        overflow: hidden auto;\r\n        transform: translate(-50%, 0px);\r\n        transition: all 0.3s ease 0s;\r\n        will-change: width;\r\n        box-shadow: rgb(0 0 0 / 70%) 0 25px 50px -15px !important;\r\n    }\r\n</style>","<script>\r\n    import Sidebar from \"../Sidebar.svelte\";\r\n    import NoteArea from \"../NoteArea.svelte\";\r\n    import NoteItem from \"../NoteItem.svelte\";\r\n    import ActionPanel from \"../utility/ActionPanel.svelte\";\r\n    import { onMount } from \"svelte\";\r\n    import {noteIdToContent , MESSAGE , checkbox_checked_code , checkbox_unchecked_code, check_list_trigger_characters, bullet_list_trigger_characters, list_disc} from '../constants';\r\n    import {getAllNotes , createNewNote , deleteNoteById , updateNoteContent , updateNoteTitle} from '../utility/api';\r\n    import { AUTH , signoutUser } from \"../firebase\";\r\n    import Input from \"../utility/Input.svelte\";\r\n    import {registerListener , EVENTS, fireEvent} from '../EventManager';\r\n    import Popup from \"../utility/Popup.svelte\";\r\n    import { sanitizeContent , normalizeContent} from \"../utility\";\r\n\r\n    export let helpItems;\r\n\r\n    let notes = [];\r\n    let selectedNote = {\r\n        id : \"\",\r\n        title: \"\",\r\n        content : \"\",\r\n        isContentChanged : false\r\n    }\r\n    \r\n    let isSearching = false;\r\n    let searchResultFound = null;\r\n    let searchResult = [];\r\n    let editMode = false;\r\n\r\n    let Popups = {\r\n        searchPopup : false,\r\n        helpPopup : false\r\n    }\r\n\r\n    onMount( () => {\r\n\r\n        //Register all Event Listeners...\r\n        registerListener(EVENTS.SELECT_NOTE,onNoteSelect);\r\n        registerListener(EVENTS.DELETE_NOTE,onNoteDelete);\r\n        registerListener(EVENTS.NOTE_NAME_CHANGE,editNoteName);\r\n        registerListener(EVENTS.NOTE_AREA_STATUS_CHANGE,toggleEditMode);\r\n        registerListener(EVENTS.NOTE_AREA_KEY_DOWN,onNoteAreaKeyDown);\r\n        registerListener(EVENTS.NOTE_AREA_KEY_UP,onNoteAreaKeyUp);\r\n        registerListener(EVENTS.NEW_NOTE,newNote);\r\n        registerListener(EVENTS.SAVE_NOTE,saveNote);\r\n        registerListener(EVENTS.USER_SIGNOUT,signoutUser);\r\n        registerListener(EVENTS.OPEN_POPUP,openPopup);\r\n        registerListener(EVENTS.CLOSE_POPUP,closePopup);\r\n        registerListener(EVENTS.CLOSE_POPUP,closePopup);\r\n        registerListener(EVENTS.DOWNLOAD_NOTE,downloadNote);\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n\r\n        getAllNotes(AUTH.currentUser.uid)\r\n        .then(res => {\r\n            if(res && res.data && res.data.length){\r\n                notes = res.data;\r\n                notes.forEach(userNote => {\r\n                    noteIdToContent[userNote.id] = normalizeContent(userNote.content);\r\n                });\r\n                selectedNote.id = notes[0].id;\r\n                selectedNote.title = notes[0].title;\r\n                selectedNote.content = noteIdToContent[notes[0].id];\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            }else{\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            }\r\n        })\r\n        .catch(err => {\r\n            //createLog('Getting User Notes','69','ERROR',err,ERROR_GROUP);\r\n            fireEvent(EVENTS.SHOW_TOAST,{\r\n                message : MESSAGE.GENERIC_ERROR_MSG\r\n            });\r\n            \r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n    });\r\n\r\n    const onNoteSelect = (_selectedNote) => {\r\n        if(_selectedNote.type === 'SIDEBAR'){\r\n            openNote(_selectedNote);\r\n        }else if(_selectedNote.type === 'SEARCH'){\r\n            selectSearchNote(_selectedNote);\r\n        }\r\n    }\r\n\r\n    const openNote = (_selectedNote) => {\r\n        if(selectedNote.id && selectedNote.id !== _selectedNote.note_id){\r\n            if(selectedNote.isContentChanged){\r\n                let confirmOnNoteChange = confirm('Are you sure? Your current changes will not be saved!');\r\n                if(!confirmOnNoteChange){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        selectedNote = {\r\n            id : _selectedNote.note_id,\r\n            title: _selectedNote.note_name,\r\n            content : noteIdToContent[_selectedNote.note_id],\r\n            isContentChanged : false\r\n        }\r\n    }\r\n\r\n    const onNoteDelete = (noteToDelete) => {\r\n        const confirmDelete = window.confirm(`Are you sure you want to delete note : ${selectedNote.title} `);\r\n        if(!confirmDelete) return;\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        const note_id = noteToDelete.id;\r\n        deleteNoteById(note_id,AUTH.currentUser.uid)\r\n        .then(res => {\r\n            if(res && res.success){\r\n                notes = notes.filter(note => note.id !== note_id);\r\n                notes = notes;\r\n                selectedNote = {\r\n                    id : '',\r\n                    title: '',\r\n                    content : '',\r\n                    isContentChanged : false\r\n                }\r\n                delete noteIdToContent[note_id];\r\n                fireEvent(EVENTS.SHOW_TOAST,{\r\n                    message : MESSAGE.NOTE_DELETE_SUCEESS\r\n                });\r\n            }else{\r\n                fireEvent(EVENTS.SHOW_TOAST,{\r\n                    message : MESSAGE.GENERIC_ERROR_MSG\r\n                });\r\n            }\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n        .catch(err => {\r\n            //createLog('deleteNote','147','ERROR',err,ERROR_GROUP);\r\n            fireEvent(EVENTS.SHOW_TOAST,{\r\n                message : MESSAGE.GENERIC_ERROR_MSG\r\n            });\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n    }\r\n\r\n    const newNote = () => {\r\n        const newNoteName = prompt(\"Please enter note name\");\r\n        if(newNoteName){\r\n            fireEvent(EVENTS.SHOW_SPINNER,{});\r\n            createNewNote(newNoteName,AUTH.currentUser.uid)\r\n            .then(res => {\r\n                if(res && res.success && res.data && res.data.new_note_id){\r\n                    const new_note_id = res.data.new_note_id;\r\n                    notes.push({\r\n                        id : new_note_id,\r\n                        title : newNoteName\r\n                    })\r\n                    noteIdToContent[new_note_id] = '';\r\n                    selectedNote = {\r\n                        id : new_note_id,\r\n                        title: newNoteName,\r\n                        content : noteIdToContent[new_note_id],\r\n                        isContentChanged : false\r\n                    }\r\n                    notes = notes;\r\n                }else{\r\n                    fireEvent(EVENTS.SHOW_TOAST,{\r\n                        message : MESSAGE.GENERIC_ERROR_MSG\r\n                    });\r\n                }\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            })\r\n            .catch(err => {\r\n                fireEvent(EVENTS.SHOW_TOAST,{\r\n                    message : MESSAGE.GENERIC_ERROR_MSG\r\n                });\r\n                fireEvent(EVENTS.HIDE_SPINNER,{});\r\n            })\r\n        }\r\n    };\r\n\r\n    const openPopup = (popup_detail) => {\r\n        Popups[popup_detail.popupName] = true;\r\n    }\r\n\r\n    const saveNote = () => {\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        const note_content_sanitize = sanitizeContent(selectedNote.content);\r\n        updateNoteContent(selectedNote.id,note_content_sanitize,AUTH.currentUser.uid)\r\n        .then(res => {\r\n            if(res && res.success){\r\n                noteIdToContent[selectedNote.id] = selectedNote.content;\r\n                fireEvent(EVENTS.SHOW_TOAST,{\r\n                    message : MESSAGE.NOTE_SAVE_SUCCESS\r\n                });\r\n                selectedNote.isContentChanged = false;\r\n            }else{\r\n                fireEvent(EVENTS.SHOW_TOAST,{\r\n                    message : MESSAGE.GENERIC_ERROR_MSG\r\n                });\r\n            }\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n        .catch(err => {\r\n            //createLog('saveNote','193','ERROR',err,ERROR_GROUP);\r\n            fireEvent(EVENTS.SHOW_TOAST,{\r\n                message : MESSAGE.GENERIC_ERROR_MSG\r\n            });\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        });\r\n    };\r\n\r\n    const closePopup = () => {\r\n        for(let popup_item in Popups){\r\n            if(Popups[popup_item] && popup_item === 'searchPopup'){\r\n                isSearching = false;\r\n                searchResultFound = null;\r\n                searchResult = [];\r\n            }\r\n            Popups[popup_item] = false;\r\n        }\r\n    }\r\n\r\n    const doSearch = (evt) => {\r\n        const searchKey = evt.target.value;\r\n        if(!searchKey){\r\n            searchResultFound = null;\r\n            searchResult = [];\r\n            return;\r\n        } \r\n        isSearching = true;\r\n        const searchKey_lowercase = searchKey.toLowerCase();\r\n        searchResult = notes.filter(\r\n            note => {\r\n                const none_name_lowercase = note.title ? note.title.toLowerCase() : '';\r\n                const none_content_lowercase = note.content ? note.content.toLowerCase() : '';\r\n                return(\r\n                    (none_name_lowercase && none_name_lowercase.indexOf(searchKey_lowercase) > -1)\r\n                    ||\r\n                    (none_content_lowercase && none_content_lowercase.indexOf(searchKey_lowercase) > -1)\r\n                );\r\n            }\r\n        );\r\n        searchResult = searchResult;\r\n        searchResultFound =  !!Number(searchResult && searchResult.length);\r\n    }\r\n\r\n    const selectSearchNote = (_selectedNote) => {\r\n        if(selectedNote.id && selectedNote.id !== _selectedNote.note_id){\r\n            if(selectedNote.isContentChanged){\r\n                let confirmOnNoteChange = confirm('Are you sure? Your current changes will not be saved!');\r\n                if(!confirmOnNoteChange){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        selectedNote = {\r\n            id : _selectedNote.note_id,\r\n            title : _selectedNote.note_name,\r\n            content  :noteIdToContent[_selectedNote.note_id],\r\n            isContentChanged : false\r\n        }\r\n        closePopup();\r\n    }\r\n\r\n    const editNoteName = () => {\r\n        const newNoteName = prompt(\"Please enter note name\",selectedNote.title);\r\n        if(!newNoteName) return;\r\n        fireEvent(EVENTS.SHOW_SPINNER,{});\r\n        updateNoteTitle(selectedNote.id,newNoteName,firebase.auth().currentUser.uid)\r\n        .then(res => {\r\n            if(res && res.success){\r\n                selectedNote.title = newNoteName;\r\n                for(let index = 0 ; index < notes.length ; index++){\r\n                    if(notes[index].id === selectedNote.id){\r\n                        notes[index].title = newNoteName;\r\n                        break;\r\n                    }\r\n                }\r\n                fireEvent(EVENTS.SHOW_TOAST,{\r\n                    message : MESSAGE.NOTE_SAVE_SUCCESS\r\n                });\r\n            }else{\r\n                fireEvent(EVENTS.SHOW_TOAST,{\r\n                    message : MESSAGE.GENERIC_ERROR_MSG\r\n                });\r\n                \r\n            }\r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        })\r\n        .catch(err => {\r\n            //createLog('editNoteName','276','ERROR',err,ERROR_GROUP);\r\n            fireEvent(EVENTS.SHOW_TOAST,{\r\n                message : MESSAGE.GENERIC_ERROR_MSG\r\n            });\r\n            \r\n            fireEvent(EVENTS.HIDE_SPINNER,{});\r\n        });\r\n    };\r\n\r\n    window.addEventListener('keyup',(e) => {\r\n\r\n        if(e.altKey){\r\n            if((e.key == 's' || e.key == \"S\") && editMode){\r\n                saveNote();\r\n            }else if(e.key == 'n' || e.key == \"N\"){\r\n                newNote();\r\n            }else if(e.key == 'f' || e.key == \"F\"){\r\n                openSearchPopup();\r\n            }else{\r\n                return;\r\n            }\r\n        }else{\r\n            return;\r\n        }\r\n        \r\n    },false);\r\n\r\n    window.addEventListener('keydown',(e) => {\r\n        if(\r\n            e.altKey && (\r\n            e.key == 's' || e.key == 'S' || \r\n            e.key == 'f' || e.key == 'F' || \r\n            e.key == 'n' || e.key == 'N')\r\n        ){\r\n            e.preventDefault();\r\n        }\r\n            \r\n    },false);\r\n\r\n    const toggleEditMode = (payload) => {\r\n        editMode = payload.status === 'focus';\r\n    };\r\n\r\n    const onNoteAreaKeyDown = (evt) => {\r\n        const _this = evt.target;\r\n        if (evt.key == 'Tab') {\r\n            evt.preventDefault();\r\n            const start = _this.selectionStart;\r\n            const end = _this.selectionEnd;\r\n            // set textarea value to: text before caret + tab + text after caret\r\n            _this.value = _this.value.substring(0, start) + \"\\t\" + _this.value.substring(end);\r\n    \r\n            // put caret at right position again\r\n            _this.selectionStart = _this.selectionEnd = start + 1;\r\n        }else if(evt.key === 'Enter'){\r\n            const cursorPlace = _this.selectionStart;\r\n            const allLines = _this.value.split(\"\\n\");\r\n            const currentLineIndex = _this.value.substr(0, cursorPlace).split(\"\\n\").length - 1;\r\n            if(allLines && allLines.length && currentLineIndex > -1){\r\n                let currentLine = allLines[currentLineIndex];\r\n                if(currentLine){\r\n                    if(evt.ctrlKey){\r\n                        if(currentLine.indexOf(checkbox_unchecked_code) > -1 && !(currentLine === checkbox_unchecked_code)){\r\n                            currentLine =  currentLine.replace(checkbox_unchecked_code, checkbox_checked_code);\r\n                        }else if(currentLine.indexOf(checkbox_checked_code) > -1 && !(currentLine === checkbox_checked_code)){\r\n                            currentLine =  currentLine.replace(checkbox_checked_code, checkbox_unchecked_code);\r\n                        }\r\n                        allLines[currentLineIndex] = currentLine;\r\n                        _this.value = allLines.join('\\n');\r\n                        _this.setSelectionRange(cursorPlace,cursorPlace);\r\n                    }else{\r\n                        if(currentLine.indexOf(checkbox_unchecked_code) > -1 || currentLine.indexOf(checkbox_checked_code) > -1){\r\n                            evt.preventDefault();\r\n                            if(!(currentLine === checkbox_unchecked_code)){\r\n                                selectedNote.content = selectedNote.content.slice(0,cursorPlace) + '\\n' + checkbox_unchecked_code+selectedNote.content.slice(cursorPlace);\r\n                            }else{\r\n                                currentLine = '';\r\n                            }\r\n                            allLines[currentLineIndex] = currentLine;\r\n                            _this.value = allLines.join('\\n');\r\n                            if(!(currentLine === checkbox_unchecked_code)){\r\n                                _this.setSelectionRange(cursorPlace,cursorPlace);\r\n                            }else{\r\n                                _this.setSelectionRange(cursorPlace-1,cursorPlace-1);\r\n                            }\r\n                        }else if(currentLine.indexOf(list_disc) > -1){\r\n                            evt.preventDefault();\r\n                            if(!(currentLine === list_disc)){\r\n                                selectedNote.content = selectedNote.content.slice(0,cursorPlace) + '\\n' + list_disc +selectedNote.content.slice(cursorPlace);\r\n                            }else{\r\n                                currentLine = '';\r\n                            }\r\n                            allLines[currentLineIndex] = currentLine;\r\n                            _this.value = allLines.join('\\n');\r\n                            if(!(currentLine === list_disc)){\r\n                                _this.setSelectionRange(cursorPlace,cursorPlace);\r\n                            }else{\r\n                                _this.setSelectionRange(cursorPlace-1,cursorPlace-1);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const onNoteAreaKeyUp = (payload) => {\r\n        selectedNote.content = payload.noteArea.value;\r\n        if(selectedNote.content != noteIdToContent[selectedNote.id]){\r\n            selectedNote.isContentChanged = true;\r\n        }else{\r\n            selectedNote.isContentChanged = false;\r\n        }\r\n        const _this = payload.noteArea;\r\n        const cursorPlace = _this.selectionStart;\r\n        \r\n        if(selectedNote.content &&  selectedNote.content.length > 1 && selectedNote.content.substring(cursorPlace-2,cursorPlace) === check_list_trigger_characters  || selectedNote.content.substring(cursorPlace-2,cursorPlace) === bullet_list_trigger_characters ){\r\n            const allLines = _this.value.split(\"\\n\");\r\n            const currentLineIndex = _this.value.substr(0, _this.selectionStart).split(\"\\n\").length - 1;\r\n            const hasStartedCheckList = selectedNote.content.substring(cursorPlace-2,cursorPlace) === check_list_trigger_characters;\r\n            if(allLines && allLines.length && currentLineIndex > -1){\r\n            let currentLine = allLines[currentLineIndex];\r\n            if(currentLine === check_list_trigger_characters || currentLine === bullet_list_trigger_characters){\r\n                selectedNote.content = selectedNote.content.slice(0,cursorPlace-2) + ((hasStartedCheckList) ? checkbox_unchecked_code : list_disc) + selectedNote.content.slice(cursorPlace);\r\n                _this.setSelectionRange(cursorPlace-1,cursorPlace-1);\r\n            }else{\r\n                selectedNote.content = selectedNote.content.slice(0,cursorPlace-2) +'\\n' + ((hasStartedCheckList) ? checkbox_unchecked_code : list_disc) + selectedNote.content.slice(cursorPlace);\r\n                _this.setSelectionRange(cursorPlace,cursorPlace);\r\n            }\r\n            \r\n            }\r\n        }\r\n    }\r\n\r\n    const downloadNote = () => {\r\n\t\t\r\n\t\tconst blob_file = new Blob([selectedNote.content],{\r\n\t\t\ttype : 'text/plain'\r\n\t\t});\r\n\r\n        let link_ele = document.createElement('a');\r\n        link_ele.href = URL.createObjectURL(blob_file);\r\n        link_ele.download = `${selectedNote.title}.txt`;\r\n\r\n        document.body.appendChild(link_ele);\r\n        link_ele.click();\r\n        URL.revokeObjectURL(blob_file);\r\n        document.body.removeChild(link_ele);\r\n\r\n\t}\r\n\r\n</script>\r\n\r\n<Sidebar {notes} {selectedNote}/>\r\n<NoteArea noteName={selectedNote.title} show={selectedNote.id} content={selectedNote.content} isContentChanged={selectedNote.isContentChanged} />\r\n<ActionPanel {selectedNote} />\r\n{#if Popups.searchPopup}\r\n    <Popup header=\"Search Notes\">\r\n        <Input classes=\"width-100 border-box\" name=\"search\" type=\"text\" onKeyUp={doSearch} placeholder=\"Type here to search\"/>\r\n        {#if searchResultFound === false && isSearching}\r\n            <div class=\"text-primary text-center width-100 text-bold\">No Result Found!</div>\r\n        {/if}\r\n        <ul class=\"p-0 m-b-32 max-height overflow-auto\">\r\n            {#each searchResult as note}\r\n                <NoteItem note_name={note.title} note_id={note.id} type=\"SEARCH\"/>    \r\n            {/each}\r\n        </ul>\r\n    </Popup>\r\n{/if}\r\n{#if Popups.helpPopup}\r\n    <Popup header=\"Help\">\r\n        <ul class=\"p-0 m-b-32 max-height overflow-auto\">\r\n            {#each helpItems as item}\r\n                <li class=\"flex flex-column m-t-5 m-b-5\">\r\n                    <span class=\"p-t-5 p-b-5 p-l-20 p-r-20 border-solid-1 border-radius-25 bg-secondary badge-shadow\">Press <span class=\"text-bold\">{item.key}</span>{item.task}</span>\r\n                </li>    \r\n            {/each}\r\n        </ul>\r\n    </Popup>\r\n{/if}","import {checkbox_unchecked_code , checkbox_checked_code , list_disc , checkbox_unchecked_code_sanitized , checkbox_checked_code_sanitized , list_disc_sanitized} from './constants';\r\n\r\nexport const sanitizeContent = (content) => {\r\n    return (\r\n        content\r\n        .replaceAll(checkbox_unchecked_code,checkbox_unchecked_code_sanitized)\r\n        .replaceAll(checkbox_checked_code,checkbox_checked_code_sanitized)\r\n        .replaceAll(list_disc,list_disc_sanitized)\r\n    );\r\n}\r\n\r\nexport const normalizeContent = (content) => {\r\n    return (\r\n        content\r\n        .replaceAll(checkbox_unchecked_code_sanitized,checkbox_unchecked_code)\r\n        .replaceAll(checkbox_checked_code_sanitized,checkbox_checked_code)\r\n        .replaceAll(list_disc_sanitized,list_disc)\r\n    );\r\n}\r\n\r\n\r\n","<script>\r\nimport { onMount } from \"svelte\";\r\nimport Image from \"../utility/Image.svelte\";\r\nimport {APP_NAME} from '../constants';\r\n\r\nexport let show;\r\nexport let helpItems;\r\n    \r\n    let selectedMsg = {\r\n        \"key\" : \"\",\r\n        \"task\" : \"\" \r\n    }\r\n    \r\n    onMount( ()=>{\r\n        selectedMsg = helpItems[Math.floor(Math.random()*3)];\r\n    });\r\n\r\n</script>\r\n\r\n{#if show}\r\n    <div class=\"flex justify-center align-center fixed height-full width-full z-index-1 flex-column bg-white\">\r\n        <div class=\"flex align-center\">\r\n            <Image classes=\"m-l-4 m-r-4\" src=\"logo.svg\" alt=\"logo\" type=\"logo\"/>\r\n            <span class=\"text-medium text-primary text-boldest\"> {APP_NAME} </span>\r\n        </div>\r\n        <br/>\r\n        <div class=\"flex flex-column\">\r\n            <span class=\"p-t-5 p-b-5 p-l-20 p-r-20 border-radius-25 badge-shadow\">Press <span class=\"bg-primary text-bold p-t-5 p-l-5 p-b-5 p-r-5 border-radius-5\">{selectedMsg.key}</span>{selectedMsg.task}</span>\r\n        </div>\r\n    </div>\r\n{/if}\r\n\r\n\r\n<style>\r\n\r\n</style>","<script>\r\n    export let show;\r\n</script>\r\n\r\n{#if show}\r\n    <div class=\"flex justify-center align-center fixed height-full width-full z-index-1 flex-column \">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: transaprent; display: block;\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <defs>\r\n            <mask id=\"ldio-l94j0p085q-mask\">\r\n            <circle cx=\"50\" cy=\"50\" r=\"20\" stroke=\"#fff\" stroke-linecap=\"round\" stroke-dasharray=\"94.24777960769379 31.41592653589793\" stroke-width=\"9\">\r\n                <animateTransform attributeName=\"transform\" type=\"rotate\" values=\"0 50 50;360 50 50\" times=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            </circle>\r\n            </mask>\r\n            </defs>\r\n            <g mask=\"url(#ldio-l94j0p085q-mask)\"><rect x=\"20.5\" y=\"0\" width=\"59\" height=\"100\" fill=\"#464646\">\r\n            <animate attributeName=\"fill\" values=\"#464646\" times=\"0\" dur=\"1s\" repeatCount=\"indefinite\" begin=\"0s\"></animate>\r\n            </rect></g>\r\n        </svg>\r\n    </div>\r\n{/if}\r\n","<script>\r\n    import { onMount } from \"svelte\";\r\n    import {Toast_Timeout} from '../constants';\r\n    import {fireEvent,EVENTS} from \"../EventManager\";\r\n\r\n    export let msg;\r\n    onMount(() => {\r\n        setTimeout(() => {\r\n            fireEvent(EVENTS.HIDE_TOAST,{});\r\n            msg = \"\";\r\n        }, Toast_Timeout);\r\n    });\r\n\r\n\r\n</script>\r\n\r\n\r\n<div class=\"flex width-full justify-center absolute z-index-2 top-10\">\r\n    <div class=\"p-t-10 p-b-10 p-l-10 p-r-10 border-radius-5 flex align-center justify-space-between flex-row z-index-2 text-primary bg-primary\">\r\n        <pre class=\"m-0\">{msg}</pre>\r\n    </div>    \r\n</div>\r\n","<script>\n\timport { AUTH } from \"./firebase\";\n\timport LoginPage from \"./Pages/LoginPage.svelte\";\n\timport AppPage from \"./Pages/AppPage.svelte\";\n\timport LoadSpinner from \"./utility/LoadSpinner.svelte\";\n\timport ProcessSpinner from \"./utility/ProcessSpinner.svelte\";\n\timport Toast from \"./utility/Toast.svelte\";\n\timport {helpItems} from './constants';\n\t\n    import {registerListener , EVENTS} from './EventManager';\n\timport { onMount } from \"svelte\";\n\tlet ToastState = {\n\t\tmessage : \"\",\n\t\tshow : false\n\t}\n\tlet currentUser;\n\t\n\tlet initProcess = true;\n\tlet isProcessing = false;\n\n\tconst hideInitLoad = () =>  {\n    \tinitProcess = false;\n\t\tinitProcess = initProcess;\n\t}\n\n\tconst showInitLoad = () =>  {\n    \tinitProcess = true;\n\t\tinitProcess = initProcess;\n\t}\n\n\tconst showSpinner = () =>  {\n    \tisProcessing = true;\n\t\tisProcessing = isProcessing;\n\t}\n\n\tconst hideSpinner = () =>  {\n    \tisProcessing = false;\n\t\tisProcessing = isProcessing;\n\t}\n\n\tAUTH.onAuthStateChanged((user) => {\n\t\tif (user && user.uid) {\n\t\t\tsetTimeout(() => {\n\t\t\t\thideInitLoad();\n\t\t\t\tcurrentUser = user;\n\t\t\t\tToastState.message = 'Logged in Successfully';\n\t\t\t\tToastState.show = true;\n\t\t\t}, 1000);\n\t\t\t\n\t\t} else {\n\t\t\thideInitLoad();\n\t\t\tcurrentUser = null;\n\t\t}\n\t});\n\n\tconst hideToast = () => {\n\t\tToastState.message = '';\n\t\tToastState.show = false;\n\t}\n\n\tconst showToast = (data) => {\n\t\tToastState.message = data.message;\n\t\tToastState.show = true;\n\t}\n\n\tonMount(() => {\n\t\tregisterListener(EVENTS.SHOW_SPINNER,showSpinner);\n\t\tregisterListener(EVENTS.HIDE_SPINNER,hideSpinner);\n\t\tregisterListener(EVENTS.SHOW_TOAST,showToast);\n\t\tregisterListener(EVENTS.HIDE_TOAST,hideToast);\n\t\tif(!window?.quick_notes?.config){\n\t\t\twindow.quick_notes = {\n\t\t\t\tconfig : {\n\t\t\t\t\tdebug_mode : false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\n</script>\n\n<main>\n\t{#if ToastState.show}\n\t\t<Toast msg={ToastState.message}/>\n\t{/if}\n\t\n\t<LoadSpinner show={initProcess} {helpItems}/>\n\t<ProcessSpinner show={isProcessing}/>\n\t{#if currentUser}\n\t\t<AppPage {helpItems}/>\n\t\t{:else if currentUser === null}\n\t\t<LoginPage />\n\t{/if}\n</main>\n","import App from './App.svelte';\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","null_to_empty","value","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","freeze","firebase","initializeApp","signoutUser","auth","signOut","AUTH","label","alt","classes","hasLabel","placeholder","onChange","onKeyUp","onClick","check_list_trigger_characters","noteIdToContent","checkbox_unchecked_code","checkbox_checked_code","list_disc","checkbox_unchecked_code_sanitized","checkbox_checked_code_sanitized","list_disc_sanitized","email_regex","API","BASE_ENDPOINT","ENDPOINTS","getAllNotes","createNote","deleteNote","updateNoteTitle","updateNoteContent","requestAccess","MESSAGE","LOGIN_SUCESS","GENERIC_ERROR_MSG","NOTE_SAVE_SUCCESS","TEXT_COPY_SUCCESS","NOTE_DELETE_SUCEESS","ENTER_EMAIL","ENTER_PASSWORD","INVALID_CREDS","REQUEST_SUCCESS","helpItems","key","task","events","EVENTS","SELECT_NOTE","DELETE_NOTE","NOTE_NAME_CHANGE","OPEN_POPUP","NOTE_AREA_STATUS_CHANGE","NOTE_AREA_KEY_UP","NOTE_AREA_KEY_DOWN","NEW_NOTE","SAVE_NOTE","USER_SIGNOUT","USER_LOGIN","CLOSE_POPUP","SEARCH_NOTE","SHOW_SPINNER","HIDE_SPINNER","SHOW_TOAST","HIDE_TOAST","USER_ACCESS_APP","DOWNLOAD_NOTE","registerListener","eventName","find","listener","fireEvent","payload","call","error","window","quick_notes","config","console","user_detail","email","password","debug_mode","newUserEmail","prompt","test","String","toLowerCase","alert","e","onSignIn","signInWithEmailAndPassword","signinUser","res","catch","err","message","onRequestAccess","fetch","method","body","btoa","JSON","stringify","json","success","title","OnClick","note_name","note_id","active","showDelete","id","currentUser","notes","selectedNote","show","noteName","content","isContentChanged","evt","status","noteArea","popupName","header","closeLabel","searchPopup","helpPopup","isSearching","searchResultFound","searchResult","editMode","Popups","userId","onNoteSelect","onNoteDelete","editNoteName","toggleEditMode","onNoteAreaKeyDown","onNoteAreaKeyUp","newNote","saveNote","openPopup","closePopup","downloadNote","uid","headers","userNote","replaceAll","_selectedNote","openNote","selectSearchNote","confirm","noteToDelete","note","newNoteName","new_note_id","popup_detail","note_content_sanitize","popup_item","altKey","openSearchPopup","preventDefault","_this","start","selectionStart","end","selectionEnd","substring","cursorPlace","allLines","split","currentLineIndex","substr","currentLine","ctrlKey","replace","join","setSelectionRange","hasStartedCheckList","blob_file","Blob","link_ele","URL","createObjectURL","download","click","revokeObjectURL","searchKey","searchKey_lowercase","none_name_lowercase","none_content_lowercase","Number","selectedMsg","floor","random","msg","setTimeout","ToastState","initProcess","isProcessing","hideInitLoad","showSpinner","hideSpinner","onAuthStateChanged","user","hideToast","showToast"],"mappings":"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"}